buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-devtools'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


	//MyBatis 추가
	// 추가로 application.properties 에서 mybatis 설정 해줘야 된다.
//	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'

	// mysql
	runtimeOnly 'mysql:mysql-connector-java'

	//테스트에서 lombok 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//oauth 추가
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//spring security (oauth 위해)
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// 타임리프에서 스프링시큐리티의 문법이나 형식을 지원하는 확장팩 라이브러리
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	// amazon s3bucket 연계
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// 자바9 이상에서 제거된 javax-api 종속성 추가 (아마존에서 사용하는듯)
	implementation 'javax.xml.bind:jaxb-api:2.2.4'

	// aop 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// log4jdbc , jdbc url 수정 및 application.properties 설정 추가
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

	// mapstruct 라이브러리 (오브젝트 매핑)
//	implementation 'org.mapstruct:mapstruct:1.5.4.Final'
//	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.4.Final'

	// 메일 보내기
	implementation 'org.springframework.boot:spring-boot-starter-mail'

}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가

// plain 제거
jar {
	enabled = false
}


// bootJar 에 .platform 폴더 추가
//bootJar {
//	from('./.platform') { into '.platform' }
//	from('./.ebextensions') { into '.ebextensions'}
//}


// chatGPT3 로 생성한 EB 배포용 build =============================================================

task buildAwsEb(type: Zip) {
	from bootJar.outputs.files
	from('.ebextensions') {
		into '.ebextensions'
	}
	from('.platform') {
		into '.platform'
	}
	archiveName 'myproject.zip'
	destinationDir file('build/libs')
}

//build.dependsOn bootJar
//build.dependsOn buildAwsEb